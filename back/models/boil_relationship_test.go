// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("DoneTodoToTodoUsingTodo", testDoneTodoToOneTodoUsingTodo)
	t.Run("DoneTodoToUserUsingUser", testDoneTodoToOneUserUsingUser)
	t.Run("TodoToUserUsingCreatedUser", testTodoToOneUserUsingCreatedUser)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("TodoToDoneTodos", testTodoToManyDoneTodos)
	t.Run("UserToDoneTodos", testUserToManyDoneTodos)
	t.Run("UserToCreatedUserTodos", testUserToManyCreatedUserTodos)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("DoneTodoToTodoUsingDoneTodos", testDoneTodoToOneSetOpTodoUsingTodo)
	t.Run("DoneTodoToUserUsingDoneTodos", testDoneTodoToOneSetOpUserUsingUser)
	t.Run("TodoToUserUsingCreatedUserTodos", testTodoToOneSetOpUserUsingCreatedUser)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("TodoToDoneTodos", testTodoToManyAddOpDoneTodos)
	t.Run("UserToDoneTodos", testUserToManyAddOpDoneTodos)
	t.Run("UserToCreatedUserTodos", testUserToManyAddOpCreatedUserTodos)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {}
